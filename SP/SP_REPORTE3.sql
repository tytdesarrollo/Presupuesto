USE [presama]
GO
/****** Object:  StoredProcedure [dbo].[SP_REPORTE3]    Script Date: 12/10/2017 16:58:19 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_REPORTE3] 
(
	@IN_CODIGO_OPN VARCHAR(10),
	@IN_FECHA_INI DATE,
	@IN_FECHA_FIN DATE
)
AS
	-- VARIABLES QUE RECIBEN LOS DATOS DEL CURSOR1
	DECLARE @CURSORDATA1 INT; 				  -- MES 
	DECLARE @CURSORDATA2 INT; 		  -- AMORTIZACION 
	DECLARE @CURSORDATA3 FLOAT; 	  -- MPRVAL
	DECLARE @CURSORDATA4 FLOAT; 	  -- AMORTIZACION + MPRVAL
	DECLARE @CURSORDATA5 VARCHAR(15); -- CODIGO ESM

	-- VARIABLES QUE RECIBEN LOS DATOS DEL CURSOR2
	DECLARE @CURSORDATA6 INT;
	DECLARE @CURSORDATA7 VARCHAR(15);

	-- VARIABLES QUE RECIBEN LOS DATOS DEL CURSOR 3
	DECLARE @CURSORDATA8 VARCHAR(10);

	-- VARIABLES PARA CONSECUTIVOS
	DECLARE @VALORCONSEC VARCHAR(10);	
	DECLARE @CONSECUTIVO VARCHAR(15);

	--
	DECLARE @TSQL NVARCHAR(MAX);   	  -- SQL QUE TENDRA QUERY COMPLETO
	DECLARE @COMPLEMENTO NVARCHAR(MAX);
	DECLARE @SELECTNULL NVARCHAR(MAX);
	DECLARE @TABTEMP NVARCHAR(MAX);
	DECLARE @CONTROLLER INT;


	-- CONTROLO LA VARIABLE @CONTROLLER SI ES IGUAL A CERO NO HAY DATOS Y TERMINA EL SP
	SET @CONTROLLER = 
		(SELECT CAST(COUNT(DISTINCT(DATENAME(MONTH,A.MPRFEC))) AS INT)
		FROM AUDI_ESM_PRESUP A
		WHERE A.OPNCOD = @IN_CODIGO_OPN 
			AND A.MPRFEC BETWEEN @IN_FECHA_INI AND @IN_FECHA_FIN);

	-- MENSAJE DE EXCEPCION CUANDO NO HAY DATOS
	IF @CONTROLLER = 0 	
		BEGIN	
			PRINT 'No hay datos entre el periodo '+convert(varchar,(@IN_FECHA_INI))+' hasta '+convert(varchar,(@IN_FECHA_FIN))
			RETURN
		END;
	ELSE	
		--ELIMINA LOS DATOS DE LA TABLA
		DELETE FROM TAB_PAGOS_R3;

		--CREA TABLA TEMPORAL PARA EL VALOR DE LOS MESE POR CODIGO 
		CREATE TABLE #TEMPREPORTE3 (
			CODIGO VARCHAR(15), 
			VALOR VARCHAR(10), 
			MES VARCHAR(10)
		)
		
		------------------------------------------------------------------------------------------------------
		--LLENADO DE LA TABLA CON LO VALORES PARA CADA MES
		DECLARE CURSOR2 CURSOR FOR
			SELECT DISTINCT CODI_ESM, MONTH(MPRFEC)
			FROM AUDI_ESM_PRESUP A
			WHERE A.OPNCOD = @IN_CODIGO_OPN 
				AND A.MPRFEC BETWEEN @IN_FECHA_INI AND @IN_FECHA_FIN

		OPEN CURSOR2
		FETCH NEXT FROM CURSOR2 INTO @CURSORDATA6, @CURSORDATA7
		WHILE @@FETCH_STATUS = 0
		BEGIN
			INSERT INTO #TEMPREPORTE3 (CODIGO, VALOR, MES)
			VALUES (@CURSORDATA6, '0', @CURSORDATA7);

			FETCH NEXT FROM CURSOR2 INTO @CURSORDATA6, @CURSORDATA7;
		END
		CLOSE CURSOR2
		DEALLOCATE CURSOR2

		------------------------------------------------------------------------------------------------------
		-- DECLARA EL CURSOR
		DECLARE CURSOR1 CURSOR FOR 
			SELECT MONTH(MPRFEC) MES, A.AMORTIZACION, 
				A.MPRVAL,(A.AMORTIZACION+A.MPRVAL) TOTAL, 
				A.CODI_ESM
			FROM AUDI_ESM_PRESUP A
			WHERE A.OPNCOD = @IN_CODIGO_OPN 
				AND A.MPRFEC BETWEEN @IN_FECHA_INI AND @IN_FECHA_FIN

		OPEN CURSOR1
		FETCH NEXT FROM CURSOR1 INTO @CURSORDATA1, @CURSORDATA2, 
			@CURSORDATA3, @CURSORDATA4, @CURSORDATA5
		WHILE @@FETCH_STATUS = 0
		BEGIN
			--
			SET @VALORCONSEC = (
				SELECT VALOR 
				FROM #TEMPREPORTE3
				WHERE CODIGO = @CURSORDATA5
					AND MES = @CURSORDATA1)+1;
			-- CREA EL CONSECUTIVO
			SET @CONSECUTIVO = CONCAT (@CURSORDATA1, @VALORCONSEC, '1') ;
			-- INSERTAN LOS VALORES EN TABLA 
			INSERT INTO TAB_PAGOS_R3 (CODI_ESM, CONSECUTIVO, VALOR)
			VALUES (@CURSORDATA5, @CONSECUTIVO, @CURSORDATA2);

			-- CREA EL CONSECUTIVO
			SET @CONSECUTIVO = CONCAT (@CURSORDATA1, @VALORCONSEC, '2') ;	
			-- INSERTAN LOS VALORES EN TABLA 
			INSERT INTO TAB_PAGOS_R3 (CODI_ESM, CONSECUTIVO, VALOR)
			VALUES (@CURSORDATA5, @CONSECUTIVO, @CURSORDATA3);

			-- CREA EL CONSECUTIVO
			SET @CONSECUTIVO = CONCAT (@CURSORDATA1, @VALORCONSEC, '3') ;
			-- INSERTAN LOS VALORES EN TABLA 
			INSERT INTO TAB_PAGOS_R3 (CODI_ESM, CONSECUTIVO, VALOR)
			VALUES (@CURSORDATA5, @CONSECUTIVO, @CURSORDATA4);

			UPDATE #TEMPREPORTE3
			SET VALOR =  @VALORCONSEC
			WHERE CODIGO = @CURSORDATA5
				AND MES = @CURSORDATA1 ;

			FETCH NEXT FROM CURSOR1 INTO @CURSORDATA1, @CURSORDATA2, 
				@CURSORDATA3, @CURSORDATA4, @CURSORDATA5
		END
		CLOSE CURSOR1
		DEALLOCATE CURSOR1

		------------------------------------------------------------------------------------------------------	
		SET @COMPLEMENTO = 'FOR SOURCE.CONSECUTIVO IN (';
		SET @SELECTNULL = '';
		SET @TABTEMP = N'CREATE TABLE ##TablaReporte2 (CODI_ESM VARCHAR(15), ';

			IF(ISNULL(OBJECT_ID('tempdb..##TablaReporte2'), 0) <> 0)	
				BEGIN
					DROP TABLE ##TablaReporte2;
				END

		DECLARE CURSOR3 CURSOR FOR
			SELECT DISTINCT CONSECUTIVO 
			FROM TAB_PAGOS_R3
			ORDER BY CONSECUTIVO

		OPEN CURSOR3
		FETCH NEXT FROM CURSOR3 INTO @CURSORDATA8
		WHILE @@FETCH_STATUS = 0
		BEGIN
			--
			SET @COMPLEMENTO = CONCAT(@COMPLEMENTO, '[', @CURSORDATA8, '],');
			--
			SET @SELECTNULL = @SELECTNULL + 'ISNULL(['+ @CURSORDATA8+'],0),';
			--
			SET @TABTEMP = @TABTEMP + DATENAME(MONTH,'01-'+CONVERT(VARCHAR,SUBSTRING(@CURSORDATA8,1,1))+'-2015') +SUBSTRING(@CURSORDATA8,2,3)+' float,';

			FETCH NEXT FROM CURSOR3 INTO @CURSORDATA8
		END
		CLOSE CURSOR3
		DEALLOCATE CURSOR3

		SET @COMPLEMENTO = SUBSTRING(@COMPLEMENTO, 1, LEN(@COMPLEMENTO)-1);
		SET @COMPLEMENTO = @COMPLEMENTO+')';

		SET @SELECTNULL = SUBSTRING(@SELECTNULL, 1, LEN(@SELECTNULL)-1);
		SET @SELECTNULL = 'CODI_ESM, '+@SELECTNULL;

		SET @TABTEMP = SUBSTRING(@TABTEMP, 1, LEN(@TABTEMP)-1);
		SET @TABTEMP = @TABTEMP+')';

		
		SET @TSQL =	
			'SELECT '+@SELECTNULL+
			'FROM
			    (
			        SELECT CODI_ESM, CONSECUTIVO,
			            VALOR
			        FROM TAB_PAGOS_R3 V        
			    ) SOURCE
			 PIVOT
			    (
			        SUM(SOURCE.VALOR)'+
			        @COMPLEMENTO+
			'	) AS PIVOTABLE;';
		
		-- SE CREA LA TABLA TEMPORAL			
		EXEC(@TABTEMP);

		INSERT INTO ##TablaReporte2
		EXEC(@TSQL);

		--SELECT * FROM ##TablaReporte2	

	
